(function(global) {
  class Floor {
    constructor(pattern) {
      this.pattern = pattern;
      const width = 18;
      const padding = 1;

      this.mesh = new THREE.Object3D();

      const obsidian = Loader.loadTexture('res/obsidian564x564.jpg');
      const lava = Loader.loadTexture('res/lava128x128.jpg');
      const cubeGeometry = new THREE.BoxBufferGeometry(width, width, width);

      const materials = {
        0: new THREE.MeshToonMaterial({ color: 'blue' }),
        1: new THREE.MeshToonMaterial({ color: 'darkgreen' }),
        2: new THREE.MeshToonMaterial({ color: 'peru' }),
        3: new THREE.MeshToonMaterial({ color: 'orangered' }),
        4: new THREE.MeshToonMaterial({ color: 'white', transparent: true }),
        5: new THREE.MeshToonMaterial({ map: obsidian }),
        6: new THREE.MeshToonMaterial({ map: lava }),
      };

      for (let [y, plane] of this.pattern.entries()) {
        const x_width = plane.length;
        for (let [x, row] of plane.entries()) {
          const z_width = row.length;
          for (let [z, elm] of row.entries()) {
            if (elm === undefined) { continue;  }

            const cube = new THREE.Mesh(cubeGeometry, materials[elm]);

            cube.position.set(
              (z - z_width / 2) * (width + padding),
              width * y,
              (x - x_width / 2) * (width + padding));
            this.mesh.add(cube);
          }
        }
      }
    }
  }

  class MinecraftIsland extends Floor {
    constructor() {
      const f1 = [
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];

      const f2 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1, , , , , , , , ,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1, , , , , , , , , , ,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1, , , , , , , , , , , ,1,1,1],
        [1,1,1,1,1,1,1,1,1,1, , , , , , , , , , , , , ,1,1],
        [1,1,1,1,1,1, , , , , , , , , , , , , , , , , , , ,],
        [1, , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];


      const f3 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1, , , , , , , , , ,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1, , , , , , , , , , , ,1,1,1],
        [1,1,1,1,1,1,1,1,1,1, , , , , , , , , , , , , ,1,1],
        [ , , , , , , ,2,2, , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];


      const f4 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [ , ,1,1,1,1,1,2,2,1,1,1, , , , , , , , , ,1,1,1,1],
        [ , , ,1,1, , ,2,2, ,1, , , , , , , , , , , ,1,1,1],
        [ , , , , , , ,2,2, , , , , , , , , , , , , , ,1,1],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];

      const f5 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,2, , , , , , , ,2,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,2, , , , , , , ,2,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,2, , , , , , , ,2,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1, ,2, , , , , , , ,2,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1, , ,2, , , , , , , ,2,1,1,1,1,1,1,1,1,1,1],
        [1,1,1, , , ,2, , , , , , , ,2,1,1,1,1,1,1,1,1,1,1],
        [1,1,1, , , ,2, , , , , , ,2,1,1,1,1,1,1,1,1,1,1,1],
        [1,1, , , , ,2, , , , , ,2, , , , , ,1,1,1,1,1,1,1],
        [1,1, , , , ,2, , ,2,2,2, , , , , , , , , ,1,1,1,1],
        [1, , , , , , , , , , , , , , , , , , , , , ,1,1,1],
        [ , , , , , , , , , , , , , , , , , , , , , , ,1,1],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];

      const f6 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1, , ,1, , ,1,1, , ,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1, , , , , , , , , , , ,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1, , , ,2,4,4,4,4,4,2, , , ,1,1,1,1,1,1, ,1],
        [1,1,1,1, , ,2, , , , , , , ,2, , , , ,1,1,1, , ,1],
        [1,1,1, , , ,4, , , , , , , ,4, , , , ,1,1,1, , ,1],
        [1,1,1, , , ,4, , , , , , , ,4, , , ,1,1,1, , , ,1],
        [1,1,1, , , ,4, , , , , , , ,4, , ,1,1,1,1,1, , ,1],
        [1,1,1, , , ,4, , , , , , , ,4, , ,1,1,1,1,1,1, ,1],
        [1,1, , , , ,4, , , , , , , ,2, , ,1,1,1,1,1, , ,1],
        [1,1, , , , ,4, , , , , , ,2, , , , ,1,1,1,1, , ,1],
        [1, , , , , ,4, , , , , ,2, , , , , , , ,1,1,1, ,1],
        [ , , , , , ,2, , ,4,4,2, , , , , , , , , , ,1,1,1],
        [ , , , , , , , , , , , , , , , , , , , , , , ,1,1],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,2,2, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];

      const f7 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1, , , , , , , , , , ,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1, , , , , , , , , , , ,1,1,1,1,1,1,1,1,1,1],
        [1,1,1, , , , ,2,4,4,4,4,4,2, , , ,1,1,1,1,1,1, ,1],
        [1,1, , , , ,2, , , , , , , ,2, , , , ,1,1,1, , ,1],
        [1,1, , , , ,4, , , , , , , ,4, , , , , ,1,1, , ,1],
        [1,1, , , , ,4, , , , , , , ,4, , , , , , , , , ,1],
        [1, , , , , ,4, , , , , , , ,4, , , ,1,1,1, , , ,1],
        [1, , , , , ,4, , , , , , , ,4, , , ,1,1,1,1, , ,1],
        [1, , , , , ,4, , , , , , , ,2, , , , ,1,1, , , ,1],
        [ , , , , , ,4, , , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , ,4, , , , , ,2, , , , , , , , , , , , ,],
        [ , , , , , ,2, , ,4,4,2, , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , ,1,2,2,1, , , , , , ,],
        [ , , , , , , , , , , , , , , ,1,2,2,1, , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];

      const f8 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1, , ,1,1,1,1,1, , ,1,1,1,1,1,1,1,1,1,1,1],
        [1,1, , , , , , , , , , , , , , , , , , ,1,1,1,1,1],
        [1, , , , , , , , , , , , , , , , , , , ,1,1,1,1,1],
        [1, , , , , , ,2,2,2,2,2,2,2, , , , , , , ,1,1,1,1],
        [1, , , , , ,2, , , , , , , ,2, , , , , , , ,1,1,1],
        [1, , , , , ,2, , , , , , , ,2, , , , , , , , ,1,1],
        [ , , , , , ,2, , , , , , , ,2, , , , , , , , , , ,],
        [ , , , , , ,2, , , , , , , ,2, , , , , , , , , , ,],
        [ , , , , , ,2, , , , , , , ,2, , , , , , , , , , ,],
        [ , , , , , ,2, , , , , , , ,2, , , , , , , , , , ,],
        [ , , , , , ,2, , , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , ,2, , , , , ,2, , , , , , , , , , , , ,],
        [ , , , , , ,2,2,2,2,2,2, , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , ,1,1,1,1, , , , , , ,],
        [ , , , , , , , , , , , , , ,1,1,1,1,1,1, , , , , ,],
        [ , , , , , , , , , , , , , ,1,1,1,1,1,1, , , , , ,],
        [ , , , , , , , , , , , , , , ,1,1,1,1, , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,]];

      const f9 = [
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , ,2,2,2,2,2,2,2, , , , , , , , , , , ,],
        [ , , , , , , ,2, , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , , ,2, , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , , ,2, , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , , ,2, , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , , ,2, , , , , ,2, , , , , , , , , , , ,],
        [ , , , , , , ,2, , , , ,2, , , , , , , , , , , , ,],
        [ , , , , , , ,2,2,2,2,2,2, , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , ,1,1,1,1,1,1, , , , , ,],
        [ , , , , , , , , , , , , , ,1,1,1,1,1,1, , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,]];

      const f10 = [
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , ,2,2,2,2,2, , , , , , , , , , , , ,],
        [ , , , , , , , ,2,2,2,2,2, , , , , , , , , , , , ,],
        [ , , , , , , , ,2,2,2,2,2, , , , , , , , , , , , ,],
        [ , , , , , , , ,2,2,2,2,2, , , , , , , , , , , , ,],
        [ , , , , , , , ,2,2,2,2,2, , , , , , , , , , , , ,],
        [ , , , , , , , ,2,2,2,2, , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , ,1,1,1,1, , , , , , ,],
        [ , , , , , , , , , , , , , , ,1,1,1,1, , , , , , ,],
        [ , , , , , , , , , , , , , , , ,1,1, , , , , , , ,],
        [ , , , , , , , , , , , , , , , , , , , , , , , , ,]];

      super([f1, f2, f3, f4, f5, f6, f7, f8, f9, f10]);
    }
  }

  class NINFloor extends Floor {
    constructor() {
      const pattern = [[
        [4,5,5,5,4,4,4,5,5,5,4,4,4,5,5,5,5,5,5,5,4,4],
        [4,4,5,5,5,4,4,4,5,5,4,4,4,4,5,5,5,5,5,5,4,4],
        [4,4,4,5,5,5,4,4,4,5,4,4,4,4,4,5,5,5,5,5,4,4],
        [4,4,4,4,5,5,5,4,4,4,5,4,5,4,4,4,5,5,5,5,4,4],
        [4,4,4,4,4,5,5,5,4,4,4,5,5,5,4,4,4,5,5,5,4,4],
        [4,4,5,4,4,4,5,5,5,4,4,4,5,5,5,4,4,4,5,5,4,4],
        [4,4,5,5,4,4,4,5,5,5,4,4,4,5,5,5,4,4,4,5,4,4],
        [4,4,5,5,5,4,4,4,5,5,5,4,4,4,5,5,5,4,4,4,4,4],
        [4,4,5,5,5,5,4,4,4,5,4,5,4,4,4,5,5,5,4,4,4,4],
        [4,4,5,5,5,5,5,4,4,4,4,4,5,4,4,4,5,5,5,4,4,4],
        [4,4,5,5,5,5,5,5,4,4,4,4,5,5,4,4,4,5,5,5,4,4],
        [4,4,5,5,5,5,5,5,5,4,4,4,5,5,5,4,4,4,5,5,4,4],
      ]];

      super(pattern);
    }
  }

  class RevisionFloor extends Floor {
    constructor() {
      const pattern = [[
        [4,4,4,4,4,4,4,4,4,5,5,5,4,4,4,4,4,4,4,4,4,4,4],
        [4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4],
        [4,4,4,4,4,5,4,5,5,4,4,4,4,4,5,5,5,5,4,4,4,4,4],
        [4,4,4,4,5,5,4,5,5,5,4,4,4,5,5,4,5,5,5,4,4,4,4],
        [4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,4,4,4],
        [4,4,5,4,4,4,4,4,5,5,5,5,5,4,4,4,4,4,5,5,5,4,4],
        [4,5,5,4,4,4,5,5,5,5,5,5,5,5,5,4,4,4,4,5,5,4,4],
        [4,5,4,4,4,5,4,4,4,4,4,5,5,5,5,5,4,4,4,4,5,5,4],
        [5,4,4,4,4,5,5,4,4,4,4,4,4,4,5,5,4,4,4,4,5,5,4],
        [5,4,4,4,5,5,4,4,4,4,5,5,4,4,4,4,5,4,4,4,5,5,4],
        [5,5,4,4,5,5,5,5,4,5,4,4,5,4,4,5,5,4,4,4,5,5,4],
        [5,5,4,4,5,5,4,4,4,5,4,4,5,4,4,5,5,4,4,5,5,4,4],
        [5,5,4,4,5,5,4,4,5,5,5,5,4,4,4,5,5,4,4,5,5,4,4],
        [5,5,4,4,5,4,4,5,5,5,5,4,4,5,4,5,5,4,4,5,5,4,4],
        [5,5,5,4,4,5,4,4,5,5,4,4,5,5,5,5,4,4,4,4,5,4,4],
        [4,5,5,4,4,4,5,4,4,4,4,4,5,5,5,5,4,4,4,5,5,4,4],
        [4,5,5,5,4,4,4,5,4,4,5,5,5,5,5,4,4,5,4,5,4,4,4],
        [4,4,5,5,5,4,4,4,5,5,5,5,5,4,4,4,4,5,5,5,4,4,4],
        [4,4,4,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4],
        [4,4,5,5,5,5,4,4,4,5,5,5,5,4,4,5,5,5,4,4,4,4,4],
        [4,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4],
        [4,4,4,4,4,4,4,4,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4],
      ]];

      super(pattern);
    }
  }

  class LavaFloor {
    constructor() {
      const W = 20;
      const N = 15;
      const texture = Loader.loadTexture('res/lava128x128.jpg');
      this.mesh = new THREE.Object3D;
      for (let x=-N; x<N; x++) {
        for (let y=-N; y<N; y++) {
          const geometry = new THREE.BoxBufferGeometry(W, 2, W);
          const material = new THREE.MeshBasicMaterial({
            map: texture,
          });
          const tile = new THREE.Mesh(geometry, material);
          tile.position.set(x * W, 0, y * W);
          this.mesh.add(tile);
        }
      }
    }

    update(frame) {
      //for (const [i, tile] of this.mesh.children.entries()) {
      //  tile.position.y = Math.sin(frame / 20  + i);
      //}
    }
  }

  class lavaNode extends NIN.THREENode {
    constructor(id, options) {
      super(id, {
        camera: options.camera,
        outputs: {
          render: new NIN.TextureOutput(),
        }
      });

      var light = new THREE.PointLight(0xffffff, 1, 400);
      light.position.set(200, 200, 200);
      this.scene.add(light);

      this.nin = new NINFloor();
      this.nin.mesh.visible = false;
      this.scene.add(this.nin.mesh);

      this.revision = new RevisionFloor();
      this.revision.mesh.visible = false;
      this.scene.add(this.revision.mesh);

      this.minecraftIsland = new MinecraftIsland();
      this.minecraftIsland.mesh.visible = false;
      this.scene.add(this.minecraftIsland.mesh);

      this.skybox = new THREE.Mesh(
        new THREE.BoxBufferGeometry(1600, 900, 1600),
        new THREE.ShaderMaterial(SHADERS[options.shader])
      );

      this.skybox.position.y = 100;

      this.skybox.material.side = THREE.BackSide;
      this.scene.add(this.skybox);
    }

    update(frame) {
      const baseFrame = 8200;

      this.camera.position.set(0, 300, 400);
      this.camera.lookAt(new THREE.Vector3(0, 0, -100));

      if (frame < baseFrame + 300) {
        this.nin.mesh.visible = true;
        this.revision.mesh.visible = false;
        this.minecraftIsland.mesh.visible = false;
      } else if (frame < baseFrame + 600) {
        this.nin.mesh.visible = false;
        this.revision.mesh.visible = true;
        this.minecraftIsland.mesh.visible = false;
      } else if (frame < baseFrame + 900) {
        this.nin.mesh.visible = false;
        this.revision.mesh.visible = false;
        this.minecraftIsland.mesh.visible = true;
      }

      this.skybox.material.uniforms.stage.value = (BEAN - 2 + 5 * 3) % 24;
      this.skybox.material.uniforms.frame.value = frame;
    }
  }

  global.lavaNode = lavaNode;
})(this);
